-navigte to containing folder of the .db file
>sqlite3 music.db
>.schema
CREATE TABLE songs (_id INTEGER PRIMARY KEY, track INTEGER, title TEXT NOT NULL, album INTEGER);
CREATE TABLE albums (_id INTEGER PRIMARY KEY, name TEXT NOT NULL, artist INTEGER);
CREATE TABLE artists (_id INTEGER PRIMARY KEY, name TEXT NOT NULL);


1. Select the titles of all songs on the album "Forbidden".

SELECT songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
WHERE albums.name = "Forbidden";


2. Repeat the previous query but this time display the songs in track order. You may want to include the track number in the output to
verify that it worked ok.

SELECT songs.track, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
WHERE albums.name = "Forbidden"
ORDER BY songs.track ASC;


3. Display all songs for the band "Deep Purple"

SELECT songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Deep Purple";


4. Rename the band "Mehitabel" to "Mehitabel_MODIFIED". NOTE that this is an exception to the advice to always fully qualify your column names. SET artists.name won't work, you just need to specify name.

UPDATE artists
SET name = "Mehitabel_MODIFIED"
WHERE artists.name = "Mehitabel";


5. Check that the record was correctly renamed.

SELECT artists.name FROM artists
WHERE artists.name LIKE "Me%";


6. Select the titles of all the songs by Aerosmith in alphabetical order. Include only the title in the output.

SELECT songs.title FROM songs
JOIN albums ON songs.album = albums._id
JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith"
ORDER BY songs.title;


7. Replace the column that you used in the previous answer with count(title) to get just a count of the number of songs.

SELECT COUNT(songs.title) FROM songs
JOIN albums ON songs.album = albums._id
JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith";


8. Get the same list as from step 6 but without any duplicates.

SELECT DISCTINCT songs.title FROM ...same...


9. Get the count of the songs without duplicates. Hint: It uses the same keyword as step 8 but the syntax may not be obvious.

SELECT COUNT(DISTINCT songs.title) FROM ...same...


10. Repeat the previous query to fing the number of artists (which, obviously, should be one) and the number of albums.

SELECT COUNT(DISTINCT artists.name) FROM artists
WHERE artists.name = "Aerosmith";

SELECT COUNT(DISTINCT albums.name) FROM albums
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith";



.
